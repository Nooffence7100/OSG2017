#include<iostream>
#include<windows.h>
#include<conio.h>
#include<string.h>
#include<cstdlib>
HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
using namespace std;
#define KEY_UP 72
#define KEY_DOWN 80
#define KEY_LEFT 75
#define KEY_RIGHT 77
#define KEY_SPACEBAR 32
#define KEY_F2 60
#define KEY_ESCAPE 27

    int map2 [100][100] = // this is the infinite map
  {
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,0,0,0,0,0,0,0,0,0,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,4,4,4,4,4,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,0,4,4,4,4,4,0,0,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,4,4,0,0,0,0,1,1,1,1,1,0,3,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,4,4,6,6,0,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,6,6,6,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,0,0,1,1,1,1,1,1,0,3,0,1,1,1,1,1,1,1,1,1,1,1,0,0,6,6,6,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,6,6,6,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,3,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,6,6,6,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,3,0,6,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,4,4,4,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,1,1,1,0,6,6,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,1,0,4,4,4,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,3,3,3,3,0,0,4,4,4,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,3,3,3,3,1,0,4,4,4,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,4,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,4,4,4,4,0,0,0,0,0,0,1,4,4,4,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,
    1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,6,6,6,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,6,6,6,6,6,1,1,1,1,
    1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,6,6,6,6,6,0,0,1,0,0,4,0,4,0,4,0,4,0,4,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,6,6,6,0,0,0,0,0,0,0,1,1,1,1,
    1,1,1,1,1,1,1,0,0,3,3,0,0,0,0,0,0,0,0,0,3,3,3,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,6,6,6,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,1,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,6,6,6,0,1,1,1,1,
    1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,6,6,6,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,6,6,6,6,6,6,0,0,0,1,1,1,1,
    1,1,1,1,1,1,1,0,0,4,4,4,4,0,0,0,0,0,0,0,4,4,4,0,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,4,4,4,4,0,0,0,0,0,0,0,4,4,4,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,
    1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,1,1,1,1,0,4,4,4,0,0,4,4,4,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,1,0,4,4,4,0,0,4,4,4,0,0,0,0,0,0,0,0,0,1,1,1,1,
    1,1,1,1,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,4,4,4,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,1,1,
    1,0,0,0,0,0,4,4,4,4,0,0,0,0,4,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,0,1,1,
    1,4,0,4,0,4,0,4,0,4,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,6,6,6,0,0,0,1,0,0,0,0,0,0,0,0,4,0,4,0,4,0,4,0,4,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0,6,6,6,0,0,0,0,0,0,0,0,0,1,1,
    1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,6,6,6,6,6,6,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,0,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,1,1,
    1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,6,6,6,6,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,1,1,
    1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,4,4,4,4,4,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,6,6,6,6,6,6,0,0,0,0,0,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,6,6,6,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,6,6,6,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,6,6,6,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,4,4,4,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,4,4,4,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,
    1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,6,6,6,6,6,6,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,6,6,0,1,1,1,
    1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,6,6,6,6,6,0,0,0,0,1,1,1,1,1,1,0,0,0,3,3,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,6,6,6,0,1,1,1,1,
    1,1,1,1,1,1,1,1,0,3,3,0,0,0,0,0,0,0,0,0,3,3,3,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,0,0,1,1,1,1,1,0,0,0,3,3,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,6,6,6,0,1,1,1,1,
    0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,4,4,4,4,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,
    0,0,0,0,1,1,1,1,0,4,4,4,4,0,0,0,0,0,0,0,4,4,4,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,1,0,0,4,4,4,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,0,0,0,0,4,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,4,4,4,4,0,0,0,0,4,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,0,0,0,0,4,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,4,0,4,0,4,0,4,0,4,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,0,3,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,3,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,3,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,6,6,6,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,6,6,6,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,3,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,0,6,6,6,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,6,6,6,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,6,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,6,3,0,1,1,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,4,4,4,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,4,4,4,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,
    0,0,3,0,1,1,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,4,4,0,0,0,0,0,0,0,4,4,4,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,0,1,1,1,1,1,1,
    1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,6,0,1,1,1,1,1,1,
    1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,0,0,0,0,0,4,0,4,0,4,0,4,0,4,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,
    1,1,1,1,1,1,0,0,0,3,3,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,0,0,0,0,1,1,1,0,0,0,3,3,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,0,0,1,1,1,0,0,4,4,4,4,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,4,4,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,4,4,4,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,4,4,4,4,0,0,0,0,4,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,4,0,4,0,4,0,4,0,4,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,4,0,4,0,4,0,4,0,4,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,6,6,6,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,0,0,0,6,6,6,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,6,6,6,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,0,0,0,6,6,6,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,4,4,4,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,3,3,3,3,0,0,4,4,4,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,0,1,1,1,
    0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,
    0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,6,6,0,1,1,1,
    0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,0,0,0,0,0,0,0,1,1,1,0,0,0,3,3,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,6,6,6,0,0,1,1,1,
    0,0,0,1,1,1,0,0,0,3,3,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,0,0,0,0,1,1,1,0,0,0,3,3,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,6,6,6,0,0,1,1,1,
    0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,4,4,4,4,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,1,1,1,
    0,0,0,1,1,1,1,0,0,4,4,4,4,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,1,1,1,
    1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,4,4,4,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,4,4,4,4,4,0,1,1,
    1,1,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,4,4,0,0,0,0,4,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,
    1,1,0,0,0,0,4,4,4,4,0,0,0,0,4,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,4,4,4,0,0,0,0,4,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,0,4,0,4,0,4,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,
    1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,0,0,0,0,4,4,4,4,4,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,6,6,6,6,6,6,0,0,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,4,4,0,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,6,6,6,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,6,6,6,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,6,6,6,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,0,0,0,6,6,6,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,4,4,4,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,3,3,3,3,0,0,4,4,4,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,3,0,0,4,4,4,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,0,3,3,3,0,1,0,6,6,0,0,0,0,0,0,0,4,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,
    1,1,1,1,1,1,1,0,0,0,0,0,1,0,6,6,0,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,6,6,0,0,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,3,3,3,3,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,0,0,0,0,0,1,0,1,1,1,0,0,0,3,3,0,0,0,0,0,0,0,0,0,3,3,3,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,0,0,0,1,1,
    1,1,1,1,1,1,1,0,0,3,3,0,0,1,0,1,0,0,0,0,3,3,3,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,0,0,1,1,1,1,1,0,0,0,3,3,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,0,0,1,1,1,
    1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,4,4,4,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,4,4,4,4,0,0,0,0,0,0,0,4,4,4,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,1,
    1,1,1,1,1,1,1,0,0,4,4,4,4,0,1,0,0,0,0,0,6,6,4,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,
    1,1,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,6,0,0,0,0,1,1,0,0,4,4,4,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,4,4,4,4,4,0,0,1,
    1,1,1,0,0,0,0,0,0,0,0,0,4,4,4,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,6,6,6,4,0,0,0,0,4,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,
    1,1,1,0,0,0,6,4,4,4,0,0,0,0,4,0,0,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,0,0,6,6,4,4,0,0,0,0,4,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,0,6,6,6,0,4,0,4,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,6,6,6,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,6,6,6,6,6,6,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,6,6,6,6,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,3,3,3,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,

          };

class Character // character class ,but it holds basically everything
{
public:
    int maptXcoord;
    int maptYcoord;
    int itsPreviousXcoord;
    int itsPreviousYcoord;
    int itsPreviousValue;
    int itsXcoord;
    int itsYcoord;
    int monster1Xcoord;
    int monster1PreviousXcoord;
    int monster1Ycoord;
    int monster1PreviousYcoord;
    int monster1PreviousValue;
    int stone;
    int food;
    int wood;
    bool backpack;

    void setStartingValues() // sets the starting values of the variables
    {
        backpack = false;
        maptXcoord = 45;
        maptYcoord = 45;
        itsXcoord = 54;
        itsYcoord = 59;
        itsPreviousXcoord = 54;
        itsPreviousYcoord = 59;
        itsPreviousValue = map2[54][59];
        monster1Xcoord = 62;
        monster1Ycoord = 65;
        monster1PreviousXcoord = 62;
        monster1PreviousYcoord = 65;
        monster1PreviousValue = map2[62][65];
        stone = 0;
        food = 0;
        wood = 0;
    }
    void createMap2() // function to print the map on the screen
    {
        SetConsoleTextAttribute(hConsole,14); // changes the color
        cout<<"                         ###############################"<<endl;
        for(int i = maptXcoord ; i < maptXcoord + 19 ; i++)
        {
        cout<<"                         #";
        for(int j = maptYcoord ; j < maptYcoord + 29 ; j++)
            {
                if(map2[i][j] == 0)
                {
                    SetConsoleTextAttribute(hConsole, 2); // changes the color
                    cout<<"$";
                }
                else if(map2[i][j] == 1)
                {
                    SetConsoleTextAttribute(hConsole,9); // changes the color
                    cout<<"#";
                }
                else if(map2[i][j] == 2)
                {
                    SetConsoleTextAttribute(hConsole,12); // changes the color
                    cout<<"X";
                }
                else if(map2[i][j] == 3)
                {
                    SetConsoleTextAttribute(hConsole,6); // changes the color
                    cout<<"R"; //stone
                }
                else if(map2[i][j] == 4)
                {
                    SetConsoleTextAttribute(hConsole,10); // changes the color
                    cout<<"W"; //wood
                }
                else if(map2[i][j] == 5)
                {
                    SetConsoleTextAttribute(hConsole,14); // changes the color
                    cout<<"Z";
                }
                else if(map2[i][j] == 6)
                {
                    SetConsoleTextAttribute(hConsole,4); // changes the color
                    cout << "F"; //food
                }
        }
        SetConsoleTextAttribute(hConsole,14); // changes the color
        cout<<"#";
        cout << endl;

        }
    SetConsoleTextAttribute(hConsole,14); // changes the color
        cout<<"                         ###############################"<<endl;
    }

    void backPack()
    {
        SetConsoleTextAttribute(hConsole,14);
        cout<<"                         ###############################"<<endl;
        cout<<"                         #                             #"<<endl;
        cout<<"                         #     Resource  Backpack:     #"<<endl;
        cout<<"                         #                             #"<<endl;
        cout<<"                         # Current resources available:#"<<endl;
        cout<<"                         #                             #"<<endl;
        cout<<"                         #"; SetConsoleTextAttribute(hConsole,10); cout<<"    Wood: "<<wood; SetConsoleTextAttribute(hConsole,6); cout<<"   Stone: "<<stone; SetConsoleTextAttribute(hConsole,14); cout<<"       #"<<endl;
        cout<<"                         #                             #"<<endl;
        cout<<"                         #"; SetConsoleTextAttribute(hConsole,4); cout<<"    Food: "<<food;SetConsoleTextAttribute(hConsole,11);cout<<"   Diamond: 0";SetConsoleTextAttribute(hConsole,14);cout<<"     #"<<endl;
        cout<<"                         #                             #"<<endl;
        cout<<"                         # Resources Needed To Create: #"<<endl;
        cout<<"                         #                             #"<<endl;
        cout<<"                         #"; SetConsoleTextAttribute(hConsole,6); cout<<"    Stone Block: 3 Stones.";SetConsoleTextAttribute(hConsole,14);cout<<"   #"<<endl;
        cout<<"                         #                             #"<<endl;
        cout<<"                         #"; SetConsoleTextAttribute(hConsole,10); cout<<"   3 Wooden Sticks: 1 Wood.";SetConsoleTextAttribute(hConsole,14);cout<<"  #"<<endl;
        cout<<"                         #                             #"<<endl;
        cout<<"                         #"; SetConsoleTextAttribute(hConsole,11); cout<<"  Diamond Armor: 7 Diamonds.";SetConsoleTextAttribute(hConsole,14);cout<<" #"<<endl;
        cout<<"                         #                             #"<<endl;
        cout<<"                         #   To Exit Press F2 Again.   #"<<endl;
        cout<<"                         #                             #"<<endl;
        cout<<"                         ###############################"<<endl;

    }

    int getXCoord() // gets the X coordinates of the character and returns them if needed outside of the class
    {
        return itsXcoord;
    }

    void setMonsterCoordNew() // sets the new X,Y coordinates for the Zombie
    {
        int mnp = rand() % 5 + 1; // creates random number between 1 and 4, to choose direction

        if(mnp == 1) // zombie goes down
        {
            if(monster1Xcoord < 97)
            {
                monster1Xcoord++;
            }
            else
            {
                setMonsterCoordNew();
            }
        }
        else if(mnp == 2) // zombie goes left
        {
            if(monster1Ycoord > 0)
            {
                monster1Ycoord--;
            }
            else
            {
                setMonsterCoordNew();
            }
        }
        else if(mnp == 3) // zombie goes right
        {
            if(monster1Ycoord < 97)
            {
                monster1Ycoord++;
            }
            else
            {
                setMonsterCoordNew();
            }

        }
        else if(mnp == 4) // zombie goes up
        {
            if(monster1Xcoord > 0)
            {
                monster1Xcoord--;
            }
            else
            {
                setMonsterCoordNew();
            }
        }
    }

    void setXcordm(int a){ // decreases the X value, character moves up
        if(itsXcoord > 0)
        {
            itsXcoord = itsXcoord - a ;
    }
    }

    void setXcordp(int a){ // increases the X value, character moves down
        if(itsXcoord < 97){
            itsXcoord = itsXcoord + a;
    }
    }

    int getYCoord() // gets the Y coordinates of the character and returns them if needed outside of the class
    {
        return itsYcoord;
    }

    void setYcordm(int a){ // decreases the Y value, character moves left

        if(itsYcoord > 0)
    {
            itsYcoord = itsYcoord - a;
    }
    }

    void setYcordp(int a){ // increases the Y value, character moves right
        if(itsYcoord < 97){
            itsYcoord = itsYcoord + a;
                         }
    }

    int printCharacter() // sets character previous value/coordinates , updates the information of the map
    {
        int a = itsXcoord,b = itsYcoord;
        int ma= monster1Xcoord, mb = monster1Ycoord;
        int px = itsPreviousXcoord;
        int pmx = monster1PreviousXcoord;
        itsPreviousXcoord = itsXcoord;
        monster1PreviousXcoord = monster1Xcoord;
        int py = itsPreviousYcoord;
        int pmy = monster1PreviousYcoord;
        itsPreviousYcoord = itsYcoord;
        monster1PreviousYcoord = monster1Ycoord;
        int pv = itsPreviousValue;
        int pmv = monster1PreviousValue;
        if(map2[a][b] != 2)
        {
            itsPreviousValue = map2[a][b];
        }
        if(map2[ma][mb] != 5 && map2[ma][mb] != 2)
        {
            monster1PreviousValue = map2[ma][mb];
        }
        if(pmv != 5)
        {
        map2[pmx][pmy] = pmv;
        }
        map2[px][py] = pv;
        map2[a][b] = 2;
        map2[ma][mb] = 5;
        system("cls");
        cout<<endl;
        if(backpack == false)
        {
        createMap2();
        cout<<"                          Stones: "<<stone;
        cout<<"   Wood: "<<wood;
        cout<<"   Food: "<<food<<endl<<"                                To Open BP Press F2"<<endl;
        }
        else if(backpack == true)
        {
            backPack();
        }
        if(map2[a][b]==map2[ma][mb])
        {
            cout<<"You were eaten!"<<endl;
            exit(0);
        }
    }
    void add_resource(int pv) // resource counter
    {
        if (pv == 3)
        {
            stone += 5;
        }
        else if (pv == 4)
        {
            wood++;
        }
        else if (pv == 6)
        {
            food++;
        }

    }

   void characterMovement() // Character movement, key press monitor
    {
        int c = 0;

        do
            {
                c = 0;

                switch ( ( c = getch() ) ) {

                case KEY_UP:
                    if (map2[itsXcoord -1][itsYcoord] != 1) //----> Water movement correction
                    {
                        if(maptXcoord>0 && maptXcoord == itsXcoord - 9)
                        {
                            maptXcoord--;
                        }
                        setXcordm(1);
                        setMonsterCoordNew();
                        printCharacter();
                        break;
                    }
                    else{break;}

                case KEY_DOWN:
                    if (map2[itsXcoord +1][itsYcoord] != 1) //----> Water movement correction
                    {


                    if(maptXcoord<79 && maptXcoord == itsXcoord - 9)
                    {
                        maptXcoord++;
                    }
                        setXcordp(1);
                        setMonsterCoordNew();
                        printCharacter();
                        break;
                    }
                    else
                        break;


                case KEY_LEFT:
                    if (map2[itsXcoord][itsYcoord -1] != 1) //----> Water movement correction
                    {


                    if(maptYcoord>0 && maptYcoord == itsYcoord - 14)
                    {
                        maptYcoord--;
                    }
                        setYcordm(1);
                        setMonsterCoordNew();
                        printCharacter();
                        break;
                    }
                    else
                        break;

                case KEY_RIGHT:
                    if (map2[itsXcoord][itsYcoord +1] != 1) //----> Water movement correction
                    {


                    if(maptYcoord<69 && maptYcoord == itsYcoord -14)
                    {
                        maptYcoord++;
                    }
                        setYcordp(1);
                        setMonsterCoordNew();
                        printCharacter();
                        break;
                    }
                    else
                        break;

                case KEY_SPACEBAR:

                    if(itsPreviousValue == 3 || itsPreviousValue == 4 || itsPreviousValue == 6)
                    {
                        add_resource(itsPreviousValue);
                        map2[itsXcoord][itsYcoord] = 0;
                    }
                    printCharacter();
                    break;

                case KEY_F2:
                    if(backpack == true)
                    {
                        backpack = false;
                        printCharacter();
                        break;
                    }
                    else if ( backpack == false)
                    {
                        backpack = true;
                        printCharacter();
                        break;
                    }


                case KEY_ESCAPE:
                    string exit_game;
                    cout<<"Do you want to exit?(Y/N) : ";
                    cin>> exit_game;
                    if(exit_game == "Y" || exit_game == "y" || exit_game == "yes" || exit_game == "YES" || exit_game == "Yes"){
                    exit(0);}
                    else
                    {
                        system("cls");
                        printCharacter();
                    }

        }
        Sleep(10);
    }
    while(1);
    }
};
int main()
{
    string start_game;
    cout << "Do you want to start the game?(Y/N)" << endl;
    cin >>  start_game;

    if ((start_game == "yes") || (start_game == "YES") || (start_game == "Y") || (start_game == "y"))
        {
            Character Hero;
            Hero.setStartingValues();
            Hero.createMap2();
            Hero.printCharacter();
            Hero.characterMovement();

        }
    else if ((start_game == "no") || (start_game == "NO") || (start_game == "n") || (start_game == "N"))
    {
        cout << "Are you sure?" << endl;
        cin >> start_game;
        if ((start_game == "no") || (start_game == "NO") || (start_game == "N") || (start_game == "n"))
        {
            Character Hero;
            Hero.setStartingValues();
            Hero.createMap2();
            Hero.printCharacter();
            Hero.characterMovement();
        }
        else
        {
            cout << "You left the game" << endl;
        }
    }





    else if ((start_game == "no") || (start_game == "NO") || (start_game == "n") || (start_game == "N"))
    cout << "You left the game" << endl;



return 0;
}
